#!/usr/bin/perl

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 1, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

my $SBBSDIR = "/sbbs";
my $PIDFILE = "/var/run/sbbs.pid";
my $SCREENCMD = "/usr/bin/screen";

# No changes below here...

my $pidnum = "";
my $startpath = $ENV{'PATH'};
my $newpath = "$SBBSDIR/exec:$startpath";

# Set ENV vars
$ENV{'PATH'} = $newpath;
$ENV{'SBBSCTRL'} = "$SBBSDIR/ctrl";
$ENV{'TERM'} = "xterm-256color";

# Get the SBBS process pid
open(INPF, "<$PIDFILE") || die "Unable to open $PIDFILE for input";
{
        local $/;
        $pidnum = <INPF>;
}
close(INPF);

while (-1)
{
	chdir $SBBSDIR;
	my $running="";
	# check if BBS process is running
	my $exists = kill 0, $pidnum;
	if ($exists)
	{
		$running = "running";
	}

	if ($running ne "running")
	{
		# See if they want the server started
		if (! -f "$SBBSDIR/nostart")
		{
			# The Log Entry
			my $datestring = localtime();
			my $TIME="SBBS Down, Restarting: $datestring";
			open(OUTF, ">>$SBBSDIR/SBBSScreen.log") || die "Unable to open $SBBSDIR/SBBSScreen.log for appending";
			print (OUTF "$TIME\n");
			close($OUTF);
			chdir $SBBSDIR;
			system("$SCREENCMD -fa -S SBBS -d -U -m sbbs");
		}
	}
	# Sleep for 5 minutes before checking again
	sleep(300);
}
exit(0);
